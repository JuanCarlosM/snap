[About]
 Snap is a utility to take and restore system snapshots using the native system
 tooling. The end user can accomplish this by using the 'snaptool' command, the
 command line utility to take and restore snapshot files (called snapfiles) as
 well as the 'gsnap' tool which is the graphical user interface to snap!

 Developers can extend snap by defining new snapshot targets, or abstract
 entities which snapshots can be taken of / restored, and backends to those
 targets. Currently targets exist for package repos, packages, files, and various
 system services.

 Written by and copyright (C) of Mohammed Morsi (mo@morsi.org) 2007-2011
 Licensed under the GPLv3


[Installing]
 Both RPM and DEB packages are provided for Fedora, Ubuntu, Suse, and other
 systems which use those package formats.
 
   - In install rom a source checkout / tarball simply run 'make install'
       
   - To install on Fedora, simply run 'yum install snap' (coming soon!)

   - To install on Ubuntu, simple run 'apt-get install snap' (coming soon!)


[Running]
 'man snap' for 'snaptool --help' for all available options

 To take a snapshot:
   snaptool --backup --log-level=verbose --repos --packages \
            --files=/home:/etc:!/etc/shadow

 To restore a snapshot:
   snaptool --restore --snapfile /tmp/snap-12.06.2007-23.57.54.tgz

 To launch graphical user interface:
   gsnap

 If running from a source checkout, be sure to set 'PYTHONPATH' before
 invoking snap, eg

   export PYTHONPATH='.'
   ./bin/snaptool --help


 When invoking the command line tools pass in the snapshot targets which you
 would like to backup. Additionally you may exlclude targets as well by passing
 in the targets prefixed with 'no'. To restrict the list of target entities
 which get backed up, pass that as a parameter list into the target's command
 line flag.

 For example, to disable repo / package snapshots and restrict the files which
 are backed up to those in the /home directory (excluding "jsmith's" home), you
 would run:

   snaptool --backup --norepos --nopackages --files=/home:!/home/jsmith


 By default the snapshot will be written to /tmp/snap-[current_timestamp].tgz
 unless overriden with the --snapfile flag (must specify --snapfile when
 restoring snapshots)


[Extending]
  To create a new snapshot target, register it with the list in
  snap/snapshottarget.py and add a corresponding directory to snap/backends/
  (containing an empty __init__.py)

  In that directory a backend will need to be written for every os-dependent
  implementation of the operations needed to backup/restore that snapshot target

  Furthermore configure which backend will be used by default on a per os basis
  by modifying DEFAULT_BACKENDS in snap/options.py

